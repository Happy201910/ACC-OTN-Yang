module acc-eth {
    yang-version 1.1;
    namespace "urn:xxx:yang:acc-eth";
    prefix acc-eth;
    import ietf-yang-types {
        prefix yang;
    }
    import acc-yang-types {
         prefix acc-type; 
    }

    import acc-devm {
        prefix acc-devm;
    }

    import acc-connection {
        prefix acc-con;
    }

    import acc-otn {
        prefix acc-otn;
    }

    organization "xxx";
    contact "xxx";
    description "xxx";
    revision 2019-02-13 {
        description "xxx";
        reference "xxx";
    }
    /*
   * common types
   */
    identity ETH {
        base acc-type:layer-protocol-name;
        description "";
    }
    typedef vlan-type {
        type enumeration {
            enum c-tag {
                value 0;
                description "c-tag";
            }
            enum s-tag {
                value 1;
                description "s-tag";
            }
            enum un-tag {
                value 2;
                description "no-tag";
            }
        }
        description "vlan type";
    }
    typedef oam-transmit-interval {
        type enumeration {
            enum interval-3ms33 {
                value 1;
                description "3.33ms";
            }
            enum interval-10ms {
                value 2;
                description "10ms";
            }
            enum interval-100ms {
                value 3;
                description "100ms";
            }
            enum interval-1s {
                value 4;
                description "1s";
            }
            enum interval-10s {
                value 5;
                description "10s";
            }
            enum interval-1min {
                value 6;
                description "1min";
            }
        }
        description "oam transmit interval";
    }
    typedef access-action {
        type enumeration {
            enum keep {
                value 0;
                description "keep vlan";
            }
            enum push_pop {
                value 1;
                description "push-pop vlan";
            }
            enum keep_exchange {
                value 2;
                description "exchange vlan";
            }
        }
        description "vlan access action";
    }

        typedef port-type {
        type enumeration {
            enum electrical {
                value 0;
                description "none";
            }
            enum optical {
                value 1;
                description "none";
            }
        }
        description "none";
    }
    typedef working-mode {
        type enumeration {
            enum auto {
                value 0;
                description "none";
            }
            enum 100MFullDuplex {
                value 1;
                description "none";
            }
            enum 1000MFullDuplex {
                value 2;
                description "none";
            }
            enum 10GEFullDuplex {
                value 3;
                description "none";
            }
        }
        description "none";
    }

    typedef service-mapping-mode {
        type enumeration {
            enum GFP-F {
                value 0;
                description "none";
            }
            enum GMP {
                value 1;
                description "none";
            }
            enum BMP {
                value 2;
                description "none";
            }
        }
        description "none";
    }

    typedef eth-mapping-type {
        type enumeration {
            enum EoO {
                value 0;
                description "Ethernet over OTN.";
            }
            enum EoS {
                value 1;
                description "Ethernet over SDH.";
            }
        }
    }

    /*
   * groupings
   */
    grouping vlan-spec {
        leaf vlan-id {
            mandatory true;
            when "vlan-type != 'un-tag'";
            type uint64 {
                range "1..4094";
            }
            description "vlan id";
        }
        leaf vlan-priority {
            mandatory true;
            when "vlan-type != 'un-tag'";
            type uint64 {
                range "0..7";
            }
            description "vlan priority";
        }
        leaf access-action {
            type access-action;
            description "access action";
        }
        leaf vlan-type {
            mandatory true;
            type vlan-type;
            description "vlan type";
        }
        description "vlan spec";
    }

    grouping client-vlan-spec {
        leaf-list vlan-id {
            type uint64 {
                range "1..4094";
            }
            description "vlan id";
        }
        leaf vlan-priority {
            type uint64 {
                range "0..7";
            }
            description "vlan pri";
        }
        leaf vlan-type {
            type vlan-type;
            description "vlan type";
        }
        description "client side vlan spec";
    }

    grouping eth-ftp-pac {
        leaf supported-mtu {
            mandatory true;
            type uint64;
            config false;
            description "none";
        }
        leaf current-mtu {
            mandatory true;
            type uint64;
            description "none";
        }
        leaf service-mapping-mode {
            mandatory true;
            type service-mapping-mode;
            description "none";
        }
        leaf mapping-type {
            mandatory true;
            type eth-mapping-type;
            description "none";
        }
    }

    augment "/acc-devm:ptps/acc-devm:ptp" {
        when "acc-devm:layer-protocol-name = 'ETH'";
        container eth-ptp-pac {
            leaf-list supported-working-mode {
                type working-mode;
                config false;
                description "none";
            }

            leaf current-working-mode {
                mandatory true;
                type working-mode;
                description "none";
            }
            leaf supported-mtu {
                mandatory true;
                type uint64;
                config false;
                description "none";
            }
            leaf current-mtu {
                mandatory true;
                type uint64;
                description "none";
            }
            leaf pause-control {
                mandatory true;
                type boolean;
                description "none";
            }
            leaf mac-address {
                type yang:mac-address;
                description "none";
            }
            leaf port-type {
                mandatory true;
                type port-type;
                config false;
                description "none";
            }
            leaf lldp-enable {
                type boolean;
                description "none";
            }
            leaf lldp-peer-chassis-id {
                type string {
                    length 1..64;
                }
                description "none";
            }
            leaf lldp-peer-port-id {
                type string {
                    length 1..64;
                }
                description "none";
            }
            leaf lldp-peer-system-name {
                type string {
                    length 1..64;
                }
            }
            description "none";
        }

        description "none";
    }

    augment "/acc-devm:ftps/acc-devm:ftp" {
        when "acc-devm:layer-protocol-name = 'ETH'";
        container eth-ftp-pac {
            uses eth-ftp-pac;
            description "none";
        }

        description "none";
    }

    augment "/acc-devm:ctps/acc-devm:ctp" {
        when "acc-devm:layer-protocol-name = 'ETH'";
        container eth-ctp-pac {
            container vlan-spec {
                uses vlan-spec;
                description "vlan spec";
            }
            container client-vlan-spec {
                uses client-vlan-spec;
                description "client vlan spec";
            }
            container performance {
                leaf delay {
                    mandatory true;
                    type uint64;
                    description "delay";
                }
                leaf near-packet-loss-rate {
                    mandatory true;
                    type acc-type:real;
                    description "near packet loss rate";
                }
                leaf far-packet-loss-rate {
                    mandatory true;
                    type acc-type:real;
                    description "far packet loss rate";
                }
                leaf tx-bytes {
                    mandatory true;
                    type uint64;
                    description "tx bytes";
                }
                leaf rx-bytes {
                    mandatory true;
                    type uint64;
                    description "rx bytes";
                }
                config false;
                description "none";
            }
            container oam-state-pac {
                leaf dm-state {
                    mandatory true;
                    type boolean;
                    description "dm state";
                }
                leaf tm-state {
                    mandatory true;
                    type boolean;
                    description "tm state";
                }
                leaf lm-state {
                    mandatory true;
                    type boolean;
                    description "lm state";
                }
                leaf cc-state {
                    mandatory true;
                    type boolean;
                    description "cc state";
                }
                description "802.1ag test state";
            }
            container oam-config {
                leaf mep-id {
                    mandatory true;
                    type uint16 {
                        range "1..8191";
                    }
                    description "";
                }
                leaf remote-mep-id {
                    type uint16 {
                        range "1..8191";
                    }
                    description "";
                }
                leaf meg-id {
                    mandatory true;
                    type string;
                    description "";
                }
                leaf mel {
                    mandatory true;
                    type uint8 {
                        range "0..7";
                    }
                    description "";
                }
                leaf cc-interval {
                    mandatory true;
                    type oam-transmit-interval;
                    description "cv transmit period :3.33ms/10ms/100ms/1s/10s/1min";
                }
                leaf lm-interval {
                    mandatory true;
                    type oam-transmit-interval;
                    description "lm transmit period :1s/10s/1min";
                }
                leaf dm-interval {
                    mandatory true;
                    type oam-transmit-interval;
                    description "dm transmit period :1s/10s/1min";
                }
                description "ethernet oam parameters: mep id, meg id, mel, cc interval, etc";
            }
            description "none";
        }
        description "none";
    }

    grouping eth-nni {
        leaf nni-ptp-name {
            type string {
                length 1..64;
            }
            description "";
        }
        leaf nni-ts-detail {
            type string;
            description "";
        }
    }

    rpc create-eth-connection {
        description "";
        input {
            uses acc-con:create-connection;

            container eth-uni {
                leaf uni-ptp-name {
                    type string;
                    description "uni ptp name";
                }
                container client-vlan-spec {
                    uses client-vlan-spec;
                    description "client side vlan spec";
                }
                container uni-vlan-spec {
                    uses vlan-spec;
                    description "uni vlan spec";
                }
                container ftp-vlan-spec {
                    uses vlan-spec;
                    description "ftp vlan spec";
                }
                description
                    "eth uni";
            }

            container primary-nni {
                uses acc-otn:nni;
            }
            container secondary-nni {
                uses acc-otn:nni;
            }
        }
        output {
            container connection {
                description
                    "";
                uses acc-con:connection;
            }
            container create-component {
                description
                    "";
                leaf-list ftp-name {
                    type string {
                        length "1..64";
                    }
                    description
                        "";
                }
                leaf-list ctp-name {
                    type string {
                        length "1..64";
                    }
                }
                leaf-list pg-name {
                    type uint16;
                    description
                        "";
                }
            }
        }
    }
}